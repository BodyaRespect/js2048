{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js"],"sourcesContent":["(function () {\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$DIRECTION_UP = \"ArrowUp\";\nvar $197cd56b15c33885$var$DIRECTION_DOWN = \"ArrowDown\";\nvar $197cd56b15c33885$var$DIRECTION_LEFT = \"ArrowLeft\";\nvar $197cd56b15c33885$var$DIRECTION_RIGHT = \"ArrowRight\";\nvar $197cd56b15c33885$var$board = [];\nvar $197cd56b15c33885$var$score = 0;\nvar $197cd56b15c33885$var$wonGame = false;\nvar $197cd56b15c33885$var$tileContainer = document.querySelector(\".tileContainer\");\nvar $197cd56b15c33885$var$scoreElement = document.getElementById(\"scoreElement\");\nvar $197cd56b15c33885$var$alertElement = document.getElementById(\"alert\");\ndocument.getElementById(\"newGame\").addEventListener(\"click\", $197cd56b15c33885$var$startNewGame);\n$197cd56b15c33885$var$createBoard();\n$197cd56b15c33885$var$addRandomTile();\n$197cd56b15c33885$var$addRandomTile();\nfunction $197cd56b15c33885$var$createBoard() {\n    for(var i = 0; i < 4; i++){\n        var row = [];\n        for(var j = 0; j < 4; j++)row.push(0);\n        $197cd56b15c33885$var$board.push(row);\n    }\n}\nfunction $197cd56b15c33885$var$startNewGame() {\n    $197cd56b15c33885$var$alertElement.style.display = \"none\";\n    $197cd56b15c33885$var$tileContainer.innerHTML = \"\";\n    $197cd56b15c33885$var$scoreElement.innerHTML = 0;\n    $197cd56b15c33885$var$board = [];\n    $197cd56b15c33885$var$score = 0;\n    $197cd56b15c33885$var$wonGame = false;\n    window.addEventListener(\"keydown\", $197cd56b15c33885$var$onDirectionKeyPress);\n    $197cd56b15c33885$var$createBoard();\n    $197cd56b15c33885$var$addRandomTile();\n    $197cd56b15c33885$var$addRandomTile();\n}\nfunction $197cd56b15c33885$var$continuePlaying() {\n    $197cd56b15c33885$var$alertElement.style.display = \"none\";\n    window.addEventListener(\"keydown\", $197cd56b15c33885$var$onDirectionKeyPress);\n}\nwindow.addEventListener(\"keydown\", $197cd56b15c33885$var$onDirectionKeyPress);\nfunction $197cd56b15c33885$var$onDirectionKeyPress(argument) {\n    var movePossible;\n    switch(argument.key){\n        case $197cd56b15c33885$var$DIRECTION_UP:\n            movePossible = $197cd56b15c33885$var$moveTiles(1, 0);\n            break;\n        case $197cd56b15c33885$var$DIRECTION_DOWN:\n            movePossible = $197cd56b15c33885$var$moveTiles(-1, 0);\n            break;\n        case $197cd56b15c33885$var$DIRECTION_LEFT:\n            movePossible = $197cd56b15c33885$var$moveTiles(0, -1);\n            break;\n        case $197cd56b15c33885$var$DIRECTION_RIGHT:\n            movePossible = $197cd56b15c33885$var$moveTiles(0, 1);\n            break;\n    }\n    if (movePossible) {\n        $197cd56b15c33885$var$addRandomTile();\n        var gameOver = $197cd56b15c33885$var$isGameOver();\n        if (gameOver.gameOver) $197cd56b15c33885$var$showAlert(gameOver.message);\n    }\n}\nfunction $197cd56b15c33885$var$isWithinBounds(index, step, limit) {\n    return index <= limit && step === 1 || index >= 0 && step === -1;\n}\nfunction $197cd56b15c33885$var$moveTiles(directionY, directionX) {\n    var movePossible = false;\n    var mergedRecently = false;\n    if (directionX !== 0) {\n        var startX = directionX === 1 ? 3 : 0;\n        var stepX = directionX === 1 ? -1 : 1;\n        for(var i = 0; i < 4; i++){\n            var j = startX;\n            while($197cd56b15c33885$var$isWithinBounds(j, stepX, 3)){\n                if ($197cd56b15c33885$var$board[i][j] === 0) {\n                    j += stepX;\n                    continue;\n                }\n                var destination = $197cd56b15c33885$var$getDestinationSquare(i, j, 0, directionX);\n                var tileClass = \".row\" + (i + 1) + \".column\" + (j + 1);\n                var tile = document.querySelector(tileClass);\n                if (!destination.merge || destination.merge && mergedRecently) {\n                    mergedRecently = false;\n                    destination.destinationX += destination.merge ? stepX : 0;\n                    $197cd56b15c33885$var$board[i][destination.destinationX] = $197cd56b15c33885$var$board[i][j];\n                    if (destination.destinationX !== j) {\n                        movePossible = true;\n                        $197cd56b15c33885$var$board[i][j] = 0;\n                    }\n                    $197cd56b15c33885$var$moveTileOnPage(i, destination.destinationX, tile, false);\n                    j += stepX;\n                    continue;\n                }\n                mergedRecently = true;\n                $197cd56b15c33885$var$board[i][destination.destinationX] = $197cd56b15c33885$var$board[i][j] * 2;\n                $197cd56b15c33885$var$score += $197cd56b15c33885$var$board[i][destination.destinationX];\n                $197cd56b15c33885$var$scoreElement.innerHTML = $197cd56b15c33885$var$score;\n                movePossible = true;\n                $197cd56b15c33885$var$board[i][j] = 0;\n                $197cd56b15c33885$var$moveTileOnPage(i, destination.destinationX, tile, destination.merge);\n                j += stepX;\n            }\n        }\n    } else if (directionY !== 0) {\n        var startY = directionY === 1 ? 3 : 0;\n        var stepY = directionY === 1 ? -1 : 1;\n        for(var j1 = 0; j1 < 4; j1++){\n            var i1 = startY;\n            while($197cd56b15c33885$var$isWithinBounds(i1, stepY, 3)){\n                if ($197cd56b15c33885$var$board[i1][j1] === 0) {\n                    i1 += stepY;\n                    continue;\n                }\n                var destination1 = $197cd56b15c33885$var$getDestinationSquare(i1, j1, directionY, 0);\n                var tileClass1 = \".row\" + (i1 + 1) + \".column\" + (j1 + 1);\n                var tile1 = document.querySelector(tileClass1);\n                if (!destination1.merge || destination1.merge && mergedRecently) {\n                    mergedRecently = false;\n                    destination1.destinationY += destination1.merge ? stepY : 0;\n                    $197cd56b15c33885$var$board[destination1.destinationY][j1] = $197cd56b15c33885$var$board[i1][j1];\n                    if (destination1.destinationY !== i1) {\n                        movePossible = true;\n                        $197cd56b15c33885$var$board[i1][j1] = 0;\n                    }\n                    $197cd56b15c33885$var$moveTileOnPage(destination1.destinationY, j1, tile1, false);\n                    i1 += stepY;\n                    continue;\n                }\n                mergedRecently = true;\n                $197cd56b15c33885$var$board[destination1.destinationY][j1] = $197cd56b15c33885$var$board[i1][j1] * 2;\n                $197cd56b15c33885$var$score += $197cd56b15c33885$var$board[destination1.destinationY][j1];\n                $197cd56b15c33885$var$scoreElement.innerHTML = $197cd56b15c33885$var$score;\n                movePossible = true;\n                $197cd56b15c33885$var$board[i1][j1] = 0;\n                $197cd56b15c33885$var$moveTileOnPage(destination1.destinationY, j1, tile1, destination1.merge);\n                i1 += stepY;\n            }\n        }\n    }\n    return movePossible;\n}\nfunction $197cd56b15c33885$var$shouldContinue(direction, current, limit, merge) {\n    return direction === 1 && current < limit && !merge || direction === -1 && current > 0 && !merge;\n}\nfunction $197cd56b15c33885$var$getDestinationSquare(i, j, directionY, directionX) {\n    var destinationY = i;\n    var destinationX = j;\n    var merge = false;\n    while($197cd56b15c33885$var$shouldContinue(directionY, destinationY, 3, merge) || $197cd56b15c33885$var$shouldContinue(directionX, destinationX, 3, merge)){\n        var nextY = destinationY + directionY;\n        var nextX = destinationX + directionX;\n        var nextCell = $197cd56b15c33885$var$board[nextY][nextX];\n        var currentCell = $197cd56b15c33885$var$board[i][j];\n        if (merge) break;\n        if (nextCell === 0 || nextCell === currentCell) {\n            destinationY = nextY;\n            destinationX = nextX;\n            merge = nextCell === currentCell;\n        } else if (nextCell !== 0 && nextCell !== currentCell) break;\n    }\n    return {\n        merge: merge,\n        destinationY: destinationY,\n        destinationX: destinationX\n    };\n}\nfunction $197cd56b15c33885$var$moveTileOnPage(row, column, tile, merge) {\n    var classes = Array.from(tile.classList);\n    classes.forEach(function(className) {\n        if (className.startsWith(\"row\") || className.startsWith(\"column\")) tile.classList.remove(className);\n    });\n    tile.classList.add(\"row\" + (row + 1), \"column\" + (column + 1));\n    if (merge) {\n        var elements = $197cd56b15c33885$var$tileContainer.querySelectorAll(\".row\" + (row + 1) + \".column\" + (column + 1));\n        while(elements.length > 1){\n            $197cd56b15c33885$var$tileContainer.removeChild(elements[0]);\n            elements = $197cd56b15c33885$var$tileContainer.querySelectorAll(\".row\" + (row + 1) + \".column\" + (column + 1));\n        }\n        elements[0].className = \"tile row\" + (row + 1) + \" column\" + (column + 1) + \" \" + \"value\" + $197cd56b15c33885$var$board[row][column];\n        elements[0].innerHTML = $197cd56b15c33885$var$board[row][column];\n        elements[0].classList.add(\"merged\");\n        elements[0].addEventListener(\"animationend\", function() {\n            return tile.classList.remove(\"merged\");\n        });\n    }\n}\nfunction $197cd56b15c33885$var$addTileToPage(row, column, value) {\n    var tile = document.createElement(\"div\");\n    tile.classList.add(\"tile\", \"row\" + (row + 1), \"column\" + (column + 1), \"value\" + value);\n    tile.innerHTML = value;\n    $197cd56b15c33885$var$tileContainer.appendChild(tile);\n    tile.classList.add(\"merged\");\n    tile.addEventListener(\"animationend\", function() {\n        return tile.classList.remove(\"merged\");\n    });\n}\nfunction $197cd56b15c33885$var$addRandomTile() {\n    var emptyTiles = [];\n    for(var i = 0; i < $197cd56b15c33885$var$board.length; i++){\n        for(var j = 0; j < $197cd56b15c33885$var$board[i].length; j++)if ($197cd56b15c33885$var$board[i][j] === 0) emptyTiles.push([\n            i,\n            j\n        ]);\n    }\n    var _emptyTiles_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyTiles[Math.floor(Math.random() * emptyTiles.length)], 2), randomI = _emptyTiles_Math_floor[0], randomJ = _emptyTiles_Math_floor[1];\n    $197cd56b15c33885$var$board[randomI][randomJ] = Math.random() < 0.9 ? 2 : 4;\n    $197cd56b15c33885$var$addTileToPage(randomI, randomJ, $197cd56b15c33885$var$board[randomI][randomJ]);\n}\nfunction $197cd56b15c33885$var$isGameOver() {\n    var emptySquare = false;\n    for(var i = 0; i < $197cd56b15c33885$var$board.length; i++)for(var j = 0; j < $197cd56b15c33885$var$board[i].length; j++){\n        if ($197cd56b15c33885$var$board[i][j] === 0) emptySquare = true;\n        if ($197cd56b15c33885$var$board[i][j] === 2048 && !$197cd56b15c33885$var$wonGame) return {\n            gameOver: true,\n            message: \"You won!\"\n        };\n        if (j !== 3 && $197cd56b15c33885$var$board[i][j] === $197cd56b15c33885$var$board[i][j + 1]) emptySquare = true;\n        if (i !== 3 && $197cd56b15c33885$var$board[i][j] === $197cd56b15c33885$var$board[i + 1][j]) emptySquare = true;\n    }\n    if (emptySquare) return {\n        gameOver: false,\n        message: \"\"\n    };\n    return {\n        gameOver: true,\n        message: \"Game over!\"\n    };\n}\nfunction $197cd56b15c33885$var$createAlert(divText, buttons) {\n    var alertedElement = document.createElement(\"div\");\n    $197cd56b15c33885$var$alertElement.innerText = divText;\n    buttons.forEach(function(button) {\n        var alertedButton = document.createElement(\"button\");\n        alertedButton.innerText = button.text;\n        alertedButton.onclick = button.handler;\n        alertedElement.appendChild(alertedButton);\n    });\n    return alertedElement;\n}\nfunction $197cd56b15c33885$var$showAlert(message) {\n    $197cd56b15c33885$var$alertElement.innerHTML = \"\";\n    if (message === \"Game over!\" || message === \"You won!\") {\n        var buttons = [\n            {\n                text: message === \"Game over!\" ? \"Try again\" : \"New game\",\n                handler: $197cd56b15c33885$var$startNewGame\n            }\n        ];\n        if (message === \"You won!\") {\n            buttons.push({\n                text: \"Continue\",\n                handler: $197cd56b15c33885$var$continuePlaying\n            });\n            $197cd56b15c33885$var$wonGame = true;\n            window.removeEventListener(\"keydown\", $197cd56b15c33885$var$onDirectionKeyPress);\n        }\n        var alertDiv = $197cd56b15c33885$var$createAlert(message, buttons);\n        $197cd56b15c33885$var$alertElement.appendChild(alertDiv);\n    }\n    $197cd56b15c33885$var$alertElement.style.display = \"flex\";\n    $197cd56b15c33885$var$alertElement.style.flexDirection = \"column\";\n}\n\n})();\n//# sourceMappingURL=index.f8d67adb.js.map\n","'use strict';\n\nconst DIRECTION_UP = 'ArrowUp';\nconst DIRECTION_DOWN = 'ArrowDown';\nconst DIRECTION_LEFT = 'ArrowLeft';\nconst DIRECTION_RIGHT = 'ArrowRight';\n\nlet board = [];\nlet score = 0;\nlet wonGame = false;\n\nconst tileContainer = document.querySelector('.tileContainer');\nconst scoreElement = document.getElementById('scoreElement');\nconst alertElement = document.getElementById('alert');\n\ndocument.getElementById('newGame').addEventListener('click', startNewGame);\n\ncreateBoard();\naddRandomTile();\naddRandomTile();\n\nfunction createBoard() {\n  for (let i = 0; i < 4; i++) {\n    const row = [];\n\n    for (let j = 0; j < 4; j++) {\n      row.push(0);\n    }\n\n    board.push(row);\n  }\n}\n\nfunction startNewGame() {\n  alertElement.style.display = 'none';\n  tileContainer.innerHTML = '';\n  scoreElement.innerHTML = 0;\n\n  board = [];\n  score = 0;\n  wonGame = false;\n  window.addEventListener('keydown', onDirectionKeyPress);\n\n  createBoard();\n  addRandomTile();\n  addRandomTile();\n}\n\nfunction continuePlaying() {\n  alertElement.style.display = 'none';\n  window.addEventListener('keydown', onDirectionKeyPress);\n}\n\nwindow.addEventListener('keydown', onDirectionKeyPress);\n\nfunction onDirectionKeyPress(argument) {\n  let movePossible;\n\n  switch (argument.key) {\n    case DIRECTION_UP:\n      movePossible = moveTiles(1, 0);\n      break;\n\n    case DIRECTION_DOWN:\n      movePossible = moveTiles(-1, 0);\n      break;\n\n    case DIRECTION_LEFT:\n      movePossible = moveTiles(0, -1);\n      break;\n\n    case DIRECTION_RIGHT:\n      movePossible = moveTiles(0, 1);\n      break;\n  }\n\n  if (movePossible) {\n    addRandomTile();\n\n    const gameOver = isGameOver();\n\n    if (gameOver.gameOver) {\n      showAlert(gameOver.message);\n    }\n  }\n}\n\nfunction isWithinBounds(index, step, limit) {\n  return (index <= limit && step === 1) || (index >= 0 && step === -1);\n}\n\nfunction moveTiles(directionY, directionX) {\n  let movePossible = false;\n  let mergedRecently = false;\n\n  if (directionX !== 0) {\n    const startX = directionX === 1 ? 3 : 0;\n    const stepX = directionX === 1 ? -1 : 1;\n\n    for (let i = 0; i < 4; i++) {\n      let j = startX;\n\n      while (isWithinBounds(j, stepX, 3)) {\n        if (board[i][j] === 0) {\n          j += stepX;\n          continue;\n        }\n\n        const destination = getDestinationSquare(i, j, 0, directionX);\n        const tileClass = '.row' + (i + 1) + '.column' + (j + 1);\n        const tile = document.querySelector(tileClass);\n\n        if (!destination.merge || (destination.merge && mergedRecently)) {\n          mergedRecently = false;\n          destination.destinationX += destination.merge ? stepX : 0;\n          board[i][destination.destinationX] = board[i][j];\n\n          if (destination.destinationX !== j) {\n            movePossible = true;\n            board[i][j] = 0;\n          }\n          moveTileOnPage(i, destination.destinationX, tile, false);\n          j += stepX;\n          continue;\n        }\n\n        mergedRecently = true;\n\n        board[i][destination.destinationX] = board[i][j] * 2;\n        score += board[i][destination.destinationX];\n        scoreElement.innerHTML = score;\n        movePossible = true;\n        board[i][j] = 0;\n\n        moveTileOnPage(i, destination.destinationX, tile, destination.merge);\n        j += stepX;\n      }\n    }\n  } else if (directionY !== 0) {\n    const startY = directionY === 1 ? 3 : 0;\n    const stepY = directionY === 1 ? -1 : 1;\n\n    for (let j = 0; j < 4; j++) {\n      let i = startY;\n\n      while (isWithinBounds(i, stepY, 3)) {\n        if (board[i][j] === 0) {\n          i += stepY;\n          continue;\n        }\n\n        const destination = getDestinationSquare(i, j, directionY, 0);\n        const tileClass = '.row' + (i + 1) + '.column' + (j + 1);\n        const tile = document.querySelector(tileClass);\n\n        if (!destination.merge || (destination.merge && mergedRecently)) {\n          mergedRecently = false;\n          destination.destinationY += destination.merge ? stepY : 0;\n          board[destination.destinationY][j] = board[i][j];\n\n          if (destination.destinationY !== i) {\n            movePossible = true;\n            board[i][j] = 0;\n          }\n          moveTileOnPage(destination.destinationY, j, tile, false);\n          i += stepY;\n          continue;\n        }\n\n        mergedRecently = true;\n\n        board[destination.destinationY][j] = board[i][j] * 2;\n        score += board[destination.destinationY][j];\n        scoreElement.innerHTML = score;\n        movePossible = true;\n        board[i][j] = 0;\n\n        moveTileOnPage(destination.destinationY, j, tile, destination.merge);\n        i += stepY;\n      }\n    }\n  }\n\n  return movePossible;\n}\n\nfunction shouldContinue(direction, current, limit, merge) {\n  return (direction === 1 && current < limit && !merge)\n    || (direction === -1 && current > 0 && !merge);\n}\n\nfunction getDestinationSquare(i, j, directionY, directionX) {\n  let destinationY = i;\n  let destinationX = j;\n  let merge = false;\n\n  while (shouldContinue(directionY, destinationY, 3, merge)\n  || shouldContinue(directionX, destinationX, 3, merge)) {\n    const nextY = destinationY + directionY;\n    const nextX = destinationX + directionX;\n    const nextCell = board[nextY][nextX];\n    const currentCell = board[i][j];\n\n    if (merge) {\n      break;\n    }\n\n    if (nextCell === 0 || nextCell === currentCell) {\n      destinationY = nextY;\n      destinationX = nextX;\n      merge = nextCell === currentCell;\n    } else if (nextCell !== 0 && nextCell !== currentCell) {\n      break;\n    }\n  }\n\n  return {\n    merge,\n    destinationY,\n    destinationX,\n  };\n}\n\nfunction moveTileOnPage(row, column, tile, merge) {\n  const classes = Array.from(tile.classList);\n\n  classes.forEach((className) => {\n    if (className.startsWith('row') || className.startsWith('column')) {\n      tile.classList.remove(className);\n    }\n  });\n\n  tile.classList.add('row' + (row + 1), 'column' + (column + 1));\n\n  if (merge) {\n    let elements = tileContainer\n      .querySelectorAll('.row' + (row + 1) + '.column' + (column + 1));\n\n    while (elements.length > 1) {\n      tileContainer.removeChild(elements[0]);\n\n      elements = tileContainer\n        .querySelectorAll('.row' + (row + 1) + '.column' + (column + 1));\n    }\n\n    elements[0].className = 'tile '\n      + 'row' + (row + 1)\n      + ' column' + (column + 1)\n      + ' '\n      + 'value' + board[row][column];\n\n    elements[0].innerHTML = board[row][column];\n    elements[0].classList.add('merged');\n\n    elements[0].addEventListener(\n      'animationend',\n      () => tile.classList.remove('merged'),\n    );\n  }\n}\n\nfunction addTileToPage(row, column, value) {\n  const tile = document.createElement('div');\n\n  tile.classList.add(\n    'tile',\n    'row' + (row + 1),\n    'column' + (column + 1),\n    'value' + value,\n  );\n\n  tile.innerHTML = value;\n  tileContainer.appendChild(tile);\n  tile.classList.add('merged');\n\n  tile.addEventListener('animationend', () => tile.classList.remove('merged'));\n}\n\nfunction addRandomTile() {\n  const emptyTiles = [];\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (board[i][j] === 0) {\n        emptyTiles.push([i, j]);\n      }\n    }\n  }\n\n  const [randomI, randomJ]\n  = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n  board[randomI][randomJ] = Math.random() < 0.9 ? 2 : 4;\n\n  addTileToPage(randomI, randomJ, board[randomI][randomJ]);\n}\n\nfunction isGameOver() {\n  let emptySquare = false;\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (board[i][j] === 0) {\n        emptySquare = true;\n      }\n\n      if (board[i][j] === 2048 && !wonGame) {\n        return {\n          gameOver: true, message: 'You won!',\n        };\n      }\n\n      if (j !== 3 && board[i][j] === board[i][j + 1]) {\n        emptySquare = true;\n      }\n\n      if (i !== 3 && board[i][j] === board[i + 1][j]) {\n        emptySquare = true;\n      }\n    }\n  }\n\n  if (emptySquare) {\n    return {\n      gameOver: false, message: '',\n    };\n  }\n\n  return {\n    gameOver: true, message: 'Game over!',\n  };\n}\n\nfunction createAlert(divText, buttons) {\n  const alertedElement = document.createElement('div');\n\n  alertElement.innerText = divText;\n\n  buttons.forEach((button) => {\n    const alertedButton = document.createElement('button');\n\n    alertedButton.innerText = button.text;\n    alertedButton.onclick = button.handler;\n\n    alertedElement.appendChild(alertedButton);\n  });\n\n  return alertedElement;\n}\n\nfunction showAlert(message) {\n  alertElement.innerHTML = '';\n\n  if (message === 'Game over!' || message === 'You won!') {\n    const buttons = [\n      {\n        text: message === 'Game over!' ? 'Try again' : 'New game',\n        handler: startNewGame,\n      },\n    ];\n\n    if (message === 'You won!') {\n      buttons.push({\n        text: 'Continue',\n        handler: continuePlaying,\n      });\n\n      wonGame = true;\n      window.removeEventListener('keydown', onDirectionKeyPress);\n    }\n\n    const alertDiv = createAlert(message, buttons);\n\n    alertElement.appendChild(alertDiv);\n  }\n\n  alertElement.style.display = 'flex';\n  alertElement.style.flexDirection = 'column';\n}\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$197cd56b15c33885$var$board","$197cd56b15c33885$var$score","$197cd56b15c33885$var$wonGame","$197cd56b15c33885$var$tileContainer","document","querySelector","$197cd56b15c33885$var$scoreElement","getElementById","$197cd56b15c33885$var$alertElement","$197cd56b15c33885$var$createBoard","row","j","push","$197cd56b15c33885$var$startNewGame","style","display","innerHTML","window","addEventListener","$197cd56b15c33885$var$onDirectionKeyPress","$197cd56b15c33885$var$addRandomTile","$197cd56b15c33885$var$continuePlaying","argument","movePossible","key","$197cd56b15c33885$var$moveTiles","gameOver","$197cd56b15c33885$var$isGameOver","emptySquare","message","$197cd56b15c33885$var$showAlert","alertedElement","buttons","text","handler","removeEventListener","alertDiv","createElement","innerText","forEach","button","alertedButton","onclick","appendChild","flexDirection","$197cd56b15c33885$var$isWithinBounds","index","step","limit","directionY","directionX","mergedRecently","startX","stepX","destination","$197cd56b15c33885$var$getDestinationSquare","tileClass","tile","merge","destinationX","$197cd56b15c33885$var$moveTileOnPage","startY","stepY","j1","i1","destination1","tileClass1","tile1","destinationY","$197cd56b15c33885$var$shouldContinue","direction","current","nextY","nextX","nextCell","currentCell","column","classes","from","classList","className","startsWith","remove","add","elements","querySelectorAll","removeChild","value","emptyTiles","_emptyTiles_Math_floor","isArray","Math","floor","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","err","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","TypeError","randomI","randomJ"],"version":3,"file":"index.f8d67adb.js.map"}